name: CI Pipeline

on:
  push:
    branches: ["main", "develop", "feature/*"]
  pull_request:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write   # нужно для GitHub Container Registry (GHCR)
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Docker image
        run: docker build -t ghcr.io/${{ github.repository }}:${{ github.sha }} .

      - name: Push Docker image
        run: docker push ghcr.io/${{ github.repository }}:${{ github.sha }}

      - name: Add branch tags
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        run: |
          if [ "${GITHUB_REF##*/}" = "main" ]; then
            docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:latest
            docker push ghcr.io/${{ github.repository }}:latest
            docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:prod
            docker push ghcr.io/${{ github.repository }}:prod
          elif [ "${GITHUB_REF##*/}" = "develop" ]; then
            docker tag ghcr.io/${{ github.repository }}:${{ github.sha }} ghcr.io/${{ github.repository }}:staging
            docker push ghcr.io/${{ github.repository }}:staging
          fi

  tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_DB: bookings_db
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 12qw12qw
        ports: ["5432:5432"]
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run unit tests
        if: startsWith(github.ref, 'refs/heads/feature/')
        run: pytest tests/unit --maxfail=1 --disable-warnings -q

      - name: Run integration + smoke tests
        if: github.ref == 'refs/heads/develop'
        run: pytest tests/unit tests/integration tests/smoke --disable-warnings -q

      - name: Run all tests (unit + integration + smoke + e2e)
        if: github.ref == 'refs/heads/main'
        run: pytest tests/unit tests/integration tests/smoke tests/e2e --disable-warnings -q

  deploy:
    runs-on: ubuntu-latest
    needs: [build-and-push, tests]
    steps:
      - name: Deploy staging
        if: github.ref == 'refs/heads/develop'
        run: echo "🚀 Deploy staging (docker pull ghcr.io/...:staging)"

      - name: Deploy production
        if: github.ref == 'refs/heads/main'
        run: echo "🚀 Deploy prod (docker pull ghcr.io/...:prod)"