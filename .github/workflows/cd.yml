name: CD

on:
  # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π –∑–∞–ø—É—Å–∫ –ø–æ—Å–ª–µ —É—Å–ø–µ—à–Ω–æ–≥–æ CI –Ω–∞ main
  workflow_run:
    workflows: [ "CI" ]
    types: [ completed ]
  # –ò —Ä—É—á–Ω–æ–π –∑–∞–ø—É—Å–∫ —Å –∫–Ω–æ–ø–∫–∏
  workflow_dispatch:

permissions:
  contents: read
  packages: write    # –Ω—É–∂–Ω–æ –¥–ª—è push –≤ GHCR

jobs:
  build_and_push:
    # –ó–∞–ø—É—Å–∫–∞–µ–º –µ—Å–ª–∏:
    #  - –≤—Ä—É—á–Ω—É—é (workflow_dispatch), –ò–õ–ò
    #  - CI –ø—Ä–æ—à—ë–ª —É—Å–ø–µ—à–Ω–æ –Ω–∞ –≤–µ—Ç–∫–µ main
    if: ${{ github.event_name == 'workflow_dispatch' || (github.event_name == 'workflow_run' && github.event.workflow_run.conclusion == 'success' && github.event.workflow_run.head_branch == 'main') }}
    runs-on: ubuntu-latest

    steps:
      # Checkout –∫–æ–º–º–∏—Ç–∞, –∫–æ—Ç–æ—Ä—ã–π –ø—Ä–æ—à—ë–ª CI (–¥–ª—è workflow_run)
      - name: Checkout (from CI head_sha)
        if: ${{ github.event_name == 'workflow_run' }}
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_sha }}

      # –í—Ä—É—á–Ω—É—é ‚Äî –ø—Ä–æ—Å—Ç–æ —Ç–µ–∫—É—â–∏–π HEAD —Ä–µ–ø–æ–∑–∏—Ç–æ—Ä–∏—è
      - name: Checkout (manual)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        uses: actions/checkout@v4

      - name: Compute image name (lowercase)
        id: names
        run: |
          repo_lower=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "IMAGE=ghcr.io/${repo_lower}/app" >> $GITHUB_ENV

          # –û–ø—Ä–µ–¥–µ–ª–∏–º –≤–µ—Ç–∫—É –¥–ª—è —Ç—ç–≥–∏—Ä–æ–≤–∞–Ω–∏—è
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            BRANCH="${{ github.ref_name }}"
          else
            BRANCH="${{ github.event.workflow_run.head_branch }}"
          fi
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Compute tags
        run: |
          TAGS="${IMAGE}:${GITHUB_SHA}"
          if [ "${BRANCH}" = "main" ]; then
            TAGS="${TAGS},${IMAGE}:latest"
          fi
          echo "TAGS=$TAGS" >> $GITHUB_ENV

      - name: Build & Push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ env.TAGS }}
          labels: |
            org.opencontainers.image.source=https://github.com/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}

  # –ó–∞–≥–ª—É—à–∫–∞ ¬´–¥–µ–ø–ª–æ–π –≤ prod¬ª ‚Äî –∏–¥—ë—Ç –ø–æ—Å–ª–µ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –æ–±—Ä–∞–∑–∞.
  deploy_prod:
    needs: build_and_push
    runs-on: ubuntu-latest
    if: ${{ env.BRANCH == 'main' || github.ref_name == 'main' }}
    steps:
      - name: Deploy (placeholder)
        run: |
          echo "üöÄ Deploying image: ${{ env.IMAGE }} ..."
          echo "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–π –¥–µ–ø–ª–æ–π (ssh/k8s/compose)."